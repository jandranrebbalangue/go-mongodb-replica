services:
  mongo1:
    image: mongo:8.0.11
    container_name: mongo1
    ports:
      - "27018:27017"
    volumes:
      - ./data1:/data/db
      - ./scripts/rs-init.sh:/scripts/rs-init.sh
      - ./replica.key:/replica.key
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    entrypoint:
      - bash
      - -c
      - |
        cp /replica.key /data/replica.key
        chmod 400 /data/replica.key
        chown 999:999 /data/replica.key
        exec docker-entrypoint.sh $$@
    command:
      [
        "mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--keyFile",
        "/data/replica.key",
      ]
    networks:
      - mongo-net

  mongo2:
    image: mongo:8.0.11
    container_name: mongo2
    ports:
      - "27019:27017"
    volumes:
      - ./data2:/data/db
      - ./replica.key:/replica.key
    entrypoint:
      - bash
      - -c
      - |
        cp /replica.key /data/replica.key
        chmod 400 /data/replica.key
        chown 999:999 /data/replica.key
        exec docker-entrypoint.sh $$@
    command:
      [
        "mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--keyFile",
        "/data/replica.key",
      ]
    networks:
      - mongo-net

  mongo3:
    image: mongo:8.0.11
    container_name: mongo3
    ports:
      - "27020:27017"
    volumes:
      - ./data3:/data/db
      - ./replica.key:/replica.key
    entrypoint:
      - bash
      - -c
      - |
        cp /replica.key /data/replica.key
        chmod 400 /data/replica.key
        chown 999:999 /data/replica.key
        exec docker-entrypoint.sh $$@
    command:
      [
        "mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--keyFile",
        "/data/replica.key",
      ]
    networks:
      - mongo-net

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-api
    depends_on:
      - mongo1
    ports:
      - "8080:8080"
    networks:
      - mongo-net

networks:
  mongo-net:
    driver: bridge
